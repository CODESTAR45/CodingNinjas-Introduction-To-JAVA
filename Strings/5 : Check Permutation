/*
                                                        "Check Permutation"
Given two strings, S and T, check if they are permutations of each other. Return true or false.
Permutation means - length of both the strings should same and should contain same set of characters. Order of characters doesn't matter.
Note : Input strings contain only lowercase english alphabets.

Input format :
Line 1 : String 1
Line 2 : String 2
Output format :
'true' or 'false'
Constraints :
0 <= |S| <= 10^7
0 <= |T| <= 10^7
where |S| represents the length of string, S.
Sample Input 1 :
abcde
baedc
Sample Output 1 :
true
Sample Input 2 :
abc
cbd
Sample Output 2 :
false

*/
public class Solution {

	public static String compress(String inputString) {
		String str="";
        int count=1;
        str+=inputString.charAt(0);
        int i=1;
        for(;i<inputString.length();i++){
        if(inputString.charAt(i)==inputString.charAt(i-1)){
          count++;
        } 
        else{
            if(count>1){
            str=str+count+inputString.charAt(i);
            count=1;}
            else{
                str=str+inputString.charAt(i);
            	count=1;
            }
        }
            
    } 
        if(count>1){
        str+=count;
        }
    return str;
    
  }
}
